var search_data = {"index":{"searchIndex":["customer","customerdbdatasource","customerinputform","customerinputformcontrollercreate","customerinputformcontrolleredit","customerlistcontroller","customerlistview","dbclient","deal","dealdbdatasource","liststatenotifier","mainwindow","product","productdbdatasource","productinputform","productinputformcontrollercreate","productinputformcontrolleredit","productlistcontroller","productlistview","add()","add()","add()","add()","add_listener()","change()","change()","change()","close()","close()","count()","count()","create()","create()","create()","create()","create()","delete()","delete()","delete()","delete()","delete_listener()","delete_selected()","delete_selected()","filter_address()","filter_phone()","get()","get()","get()","get()","get_list()","get_list()","get_list()","instance()","last_id()","make_readonly()","make_readonly()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","notify_listeners()","on_create()","on_create()","on_create()","on_create()","on_view_created()","on_view_created()","on_view_created()","on_view_created()","on_view_created()","on_view_created()","populate_fields()","populate_fields()","prepare_exec()","process_fields()","process_fields()","process_fields()","process_fields()","query()","refresh_data()","refresh_data()","replace()","set_all()","set_value()","set_value()","set_view()","set_view()","set_view()","set_view()","show_modal_add()","show_modal_add()","show_modal_edit()","show_modal_edit()","show_view()","show_view()","sort()","sort()","update()","update()","update_count()","update_count()","gemfile","gemfile.lock","config.yaml","db_create.sql","tables_create.sql","tables_insert.sql"],"longSearchIndex":["customer","customerdbdatasource","customerinputform","customerinputformcontrollercreate","customerinputformcontrolleredit","customerlistcontroller","customerlistview","dbclient","deal","dealdbdatasource","liststatenotifier","mainwindow","product","productdbdatasource","productinputform","productinputformcontrollercreate","productinputformcontrolleredit","productlistcontroller","productlistview","customerdbdatasource#add()","dealdbdatasource#add()","liststatenotifier#add()","productdbdatasource#add()","liststatenotifier#add_listener()","customerdbdatasource#change()","dealdbdatasource#change()","productdbdatasource#change()","customerinputform#close()","productinputform#close()","customerdbdatasource#count()","productdbdatasource#count()","customerinputform#create()","customerlistview#create()","mainwindow#create()","productinputform#create()","productlistview#create()","customerdbdatasource#delete()","dealdbdatasource#delete()","liststatenotifier#delete()","productdbdatasource#delete()","liststatenotifier#delete_listener()","customerlistcontroller#delete_selected()","productlistcontroller#delete_selected()","customerlistcontroller#filter_address()","customerlistcontroller#filter_phone()","customerdbdatasource#get()","dealdbdatasource#get()","liststatenotifier#get()","productdbdatasource#get()","customerdbdatasource#get_list()","dealdbdatasource#get_list()","productdbdatasource#get_list()","dbclient::instance()","dbclient#last_id()","customerinputform#make_readonly()","productinputform#make_readonly()","customer::new()","customerdbdatasource::new()","customerinputform::new()","customerinputformcontrollercreate::new()","customerinputformcontrolleredit::new()","customerlistcontroller::new()","customerlistview::new()","dbclient::new()","deal::new()","dealdbdatasource::new()","liststatenotifier::new()","mainwindow::new()","product::new()","productdbdatasource::new()","productinputform::new()","productinputformcontrollercreate::new()","productinputformcontrolleredit::new()","productlistcontroller::new()","productlistview::new()","liststatenotifier#notify_listeners()","customerinputform#on_create()","customerlistview#on_create()","productinputform#on_create()","productlistview#on_create()","customerinputformcontrollercreate#on_view_created()","customerinputformcontrolleredit#on_view_created()","customerlistcontroller#on_view_created()","productinputformcontrollercreate#on_view_created()","productinputformcontrolleredit#on_view_created()","productlistcontroller#on_view_created()","customerinputformcontrolleredit#populate_fields()","productinputformcontrolleredit#populate_fields()","dbclient#prepare_exec()","customerinputformcontrollercreate#process_fields()","customerinputformcontrolleredit#process_fields()","productinputformcontrollercreate#process_fields()","productinputformcontrolleredit#process_fields()","dbclient#query()","customerlistcontroller#refresh_data()","productlistcontroller#refresh_data()","liststatenotifier#replace()","liststatenotifier#set_all()","customerinputform#set_value()","productinputform#set_value()","customerinputformcontrollercreate#set_view()","customerinputformcontrolleredit#set_view()","productinputformcontrollercreate#set_view()","productinputformcontrolleredit#set_view()","customerlistcontroller#show_modal_add()","productlistcontroller#show_modal_add()","customerlistcontroller#show_modal_edit()","productlistcontroller#show_modal_edit()","customerlistcontroller#show_view()","productlistcontroller#show_view()","customerlistcontroller#sort()","productlistcontroller#sort()","customerlistview#update()","productlistview#update()","customerlistview#update_count()","productlistview#update_count()","","","","","",""],"info":[["Customer","","Customer.html","","<p>модель для сущности Покупатель данная модель реализует валидацию данных\n"],["CustomerDbDataSource","","CustomerDbDataSource.html","","<p>класс, который реализует связь между моделью Покупатель и базой данных посредством обработки sql-запросов …\n"],["CustomerInputForm","","CustomerInputForm.html","","<p>класс, который реализует модальное окно для сущности заказчик, которое используется при добавлении или …\n"],["CustomerInputFormControllerCreate","","CustomerInputFormControllerCreate.html","","<p>контроллер, которые отвечает за создание данных в рамках данной сущности\n"],["CustomerInputFormControllerEdit","","CustomerInputFormControllerEdit.html","","<p>контроллер, которые отвечает за редактирование данных в рамках данной сущности\n"],["CustomerListController","","CustomerListController.html","","<p>контроллер, которые отвечает за редактирование, удаление, добавление данных в рамках данной сущности …\n"],["CustomerListView","","CustomerListView.html","","<p>Класс, который реализует представление для сущности Товар\n"],["DBClient","","DBClient.html","","<p>класс, который реализует непосредственную работу между сущностями и БД\n"],["Deal","","Deal.html","","<p>модель для сущности Сделка данная модель реализует валидацию данных\n"],["DealDbDataSource","","DealDbDataSource.html","",""],["ListStateNotifier","","ListStateNotifier.html","",""],["MainWindow","","MainWindow.html","","<p>класс MainWindow, который из файлов реализованных сущностей создаёт их view и отрисовывает их на экране …\n"],["Product","","Product.html","","<p>модель для сущности Товар данная модель реализует валидацию данных\n"],["ProductDbDataSource","","ProductDbDataSource.html","","<p>класс, который реализует связь между моделью Товар и базой данных посредством обработки sql-запросов …\n"],["ProductInputForm","","ProductInputForm.html","",""],["ProductInputFormControllerCreate","","ProductInputFormControllerCreate.html","","<p>контроллер, которые отвечает за создание данных в рамках данной сущности\n"],["ProductInputFormControllerEdit","","ProductInputFormControllerEdit.html","","<p>контроллер, которые отвечает за редактирование данных в рамках данной сущности\n"],["ProductListController","","ProductListController.html","","<p>контроллер, которые отвечает за редактирование, удаление, добавление данных в рамках данной сущности …\n"],["ProductListView","","ProductListView.html","","<p>Класс, который реализует представление для сущности Товар\n"],["add","CustomerDbDataSource","CustomerDbDataSource.html#method-i-add","(customer)","<p>функция, которая добавляет запись в сущность Покупатель\n"],["add","DealDbDataSource","DealDbDataSource.html#method-i-add","(deal)",""],["add","ListStateNotifier","ListStateNotifier.html#method-i-add","(object)","<p>добавляет объект в массив items и уведомляет всех слушателей.\n"],["add","ProductDbDataSource","ProductDbDataSource.html#method-i-add","(product)","<p>функция, которая добавляет запись в сущность Товар\n"],["add_listener","ListStateNotifier","ListStateNotifier.html#method-i-add_listener","(listener)","<p>добавляет нового слушателя в массив listeners.\n"],["change","CustomerDbDataSource","CustomerDbDataSource.html#method-i-change","(customer)","<p>функция, которая изменяет запись в сущности Покупатель\n"],["change","DealDbDataSource","DealDbDataSource.html#method-i-change","(deal)",""],["change","ProductDbDataSource","ProductDbDataSource.html#method-i-change","(product)","<p>функция, которая изменяет запись в сущности товар\n"],["close","CustomerInputForm","CustomerInputForm.html#method-i-close","()",""],["close","ProductInputForm","ProductInputForm.html#method-i-close","()",""],["count","CustomerDbDataSource","CustomerDbDataSource.html#method-i-count","()","<p>функция, которая возвращает количество записей в сущности Покупатель\n"],["count","ProductDbDataSource","ProductDbDataSource.html#method-i-count","()","<p>функция, которая возвращает количество записей в сущности Товар\n"],["create","CustomerInputForm","CustomerInputForm.html#method-i-create","()",""],["create","CustomerListView","CustomerListView.html#method-i-create","()",""],["create","MainWindow","MainWindow.html#method-i-create","()","<p>метод, в котором происходит создание окон для сущностей Покупатель и Товар\n"],["create","ProductInputForm","ProductInputForm.html#method-i-create","()",""],["create","ProductListView","ProductListView.html#method-i-create","()",""],["delete","CustomerDbDataSource","CustomerDbDataSource.html#method-i-delete","(id)","<p>фунция, которая удаляет запись в сущности Покупатель\n"],["delete","DealDbDataSource","DealDbDataSource.html#method-i-delete","(id)",""],["delete","ListStateNotifier","ListStateNotifier.html#method-i-delete","(object)","<p>удаляет объект из массива items и уведомляет всех слушателей.\n"],["delete","ProductDbDataSource","ProductDbDataSource.html#method-i-delete","(id)","<p>фунция, которая удаляет запись в сущности товар\n"],["delete_listener","ListStateNotifier","ListStateNotifier.html#method-i-delete_listener","(listener)","<p>удаляет слушателя из массива listeners.\n"],["delete_selected","CustomerListController","CustomerListController.html#method-i-delete_selected","(current_page, per_page, selected_row)",""],["delete_selected","ProductListController","ProductListController.html#method-i-delete_selected","(current_page, per_page, selected_row)",""],["filter_address","CustomerListController","CustomerListController.html#method-i-filter_address","(page, per_page, filter_index)",""],["filter_phone","CustomerListController","CustomerListController.html#method-i-filter_phone","(page, per_page, filter_index)",""],["get","CustomerDbDataSource","CustomerDbDataSource.html#method-i-get","(id)","<p>фукнция, которая возвращает всю информацию об объекте сущности с определённым ID\n"],["get","DealDbDataSource","DealDbDataSource.html#method-i-get","(id)",""],["get","ListStateNotifier","ListStateNotifier.html#method-i-get","(number)","<p>возвращает объект из массива items по индексу.\n"],["get","ProductDbDataSource","ProductDbDataSource.html#method-i-get","(id)","<p>фукнция, которая возвращает всю информацию об объекте сущности с определённым ID\n"],["get_list","CustomerDbDataSource","CustomerDbDataSource.html#method-i-get_list","(page_size, page_num, sort_field, sort_direction, has_address = nil, has_phone = nil)","<p>функция, которая реализует фильтрацию\n"],["get_list","DealDbDataSource","DealDbDataSource.html#method-i-get_list","(page_size, page_num, sort_field, sort_direction)",""],["get_list","ProductDbDataSource","ProductDbDataSource.html#method-i-get_list","(page_size, page_num, sort_field, sort_direction)","<p>функция, которая реализует фильтрацию\n"],["instance","DBClient","DBClient.html#method-c-instance","()",""],["last_id","DBClient","DBClient.html#method-i-last_id","()",""],["make_readonly","CustomerInputForm","CustomerInputForm.html#method-i-make_readonly","(*fields)",""],["make_readonly","ProductInputForm","ProductInputForm.html#method-i-make_readonly","(*fields)",""],["new","Customer","Customer.html#method-c-new","(id, customer_name, address = nil, phone = nil)",""],["new","CustomerDbDataSource","CustomerDbDataSource.html#method-c-new","()","<p>функция, которая при инициализации класса создаёт экземпляр DBClient, необходимый для непосредственного …\n"],["new","CustomerInputForm","CustomerInputForm.html#method-c-new","(controller, existing_student = nil)",""],["new","CustomerInputFormControllerCreate","CustomerInputFormControllerCreate.html#method-c-new","(parent_controller)",""],["new","CustomerInputFormControllerEdit","CustomerInputFormControllerEdit.html#method-c-new","(parent_controller, item)",""],["new","CustomerListController","CustomerListController.html#method-c-new","(view)",""],["new","CustomerListView","CustomerListView.html#method-c-new","()","<p>при инициализации: создаётся контроллер для сущности Товар задаётся актуальная страница на представлении …\n"],["new","DBClient","DBClient.html#method-c-new","()",""],["new","Deal","Deal.html#method-c-new","(id, purchase_date, quantity, customer_id, product_id)",""],["new","DealDbDataSource","DealDbDataSource.html#method-c-new","()",""],["new","ListStateNotifier","ListStateNotifier.html#method-c-new","()",""],["new","MainWindow","MainWindow.html#method-c-new","()",""],["new","Product","Product.html#method-c-new","(id, product_name, wholesale_price, retail_price)",""],["new","ProductDbDataSource","ProductDbDataSource.html#method-c-new","()","<p>функция, которая при инициализации класса создаёт экземпляр DBClient, необходимый для непосредственного …\n"],["new","ProductInputForm","ProductInputForm.html#method-c-new","(controller, existing_student = nil)",""],["new","ProductInputFormControllerCreate","ProductInputFormControllerCreate.html#method-c-new","(parent_controller)",""],["new","ProductInputFormControllerEdit","ProductInputFormControllerEdit.html#method-c-new","(parent_controller, item)",""],["new","ProductListController","ProductListController.html#method-c-new","(view)",""],["new","ProductListView","ProductListView.html#method-c-new","()","<p>при инициализации: создаётся контроллер для сущности Товар задаётся актуальная страница на представлении …\n"],["notify_listeners","ListStateNotifier","ListStateNotifier.html#method-i-notify_listeners","()","<p>уведомляет всех слушателей о изменении массива items.\n"],["on_create","CustomerInputForm","CustomerInputForm.html#method-i-on_create","()",""],["on_create","CustomerListView","CustomerListView.html#method-i-on_create","()","<p>при создании обновляется информация об сущности\n"],["on_create","ProductInputForm","ProductInputForm.html#method-i-on_create","()",""],["on_create","ProductListView","ProductListView.html#method-i-on_create","()","<p>при создании обновляется информация об сущности\n"],["on_view_created","CustomerInputFormControllerCreate","CustomerInputFormControllerCreate.html#method-i-on_view_created","()",""],["on_view_created","CustomerInputFormControllerEdit","CustomerInputFormControllerEdit.html#method-i-on_view_created","()",""],["on_view_created","CustomerListController","CustomerListController.html#method-i-on_view_created","()",""],["on_view_created","ProductInputFormControllerCreate","ProductInputFormControllerCreate.html#method-i-on_view_created","()",""],["on_view_created","ProductInputFormControllerEdit","ProductInputFormControllerEdit.html#method-i-on_view_created","()",""],["on_view_created","ProductListController","ProductListController.html#method-i-on_view_created","()",""],["populate_fields","CustomerInputFormControllerEdit","CustomerInputFormControllerEdit.html#method-i-populate_fields","(item)",""],["populate_fields","ProductInputFormControllerEdit","ProductInputFormControllerEdit.html#method-i-populate_fields","(item)",""],["prepare_exec","DBClient","DBClient.html#method-i-prepare_exec","(statement, *params)",""],["process_fields","CustomerInputFormControllerCreate","CustomerInputFormControllerCreate.html#method-i-process_fields","(fields)",""],["process_fields","CustomerInputFormControllerEdit","CustomerInputFormControllerEdit.html#method-i-process_fields","(fields)",""],["process_fields","ProductInputFormControllerCreate","ProductInputFormControllerCreate.html#method-i-process_fields","(fields)",""],["process_fields","ProductInputFormControllerEdit","ProductInputFormControllerEdit.html#method-i-process_fields","(fields)",""],["query","DBClient","DBClient.html#method-i-query","(statement)",""],["refresh_data","CustomerListController","CustomerListController.html#method-i-refresh_data","(page, per_page)",""],["refresh_data","ProductListController","ProductListController.html#method-i-refresh_data","(page, per_page)",""],["replace","ListStateNotifier","ListStateNotifier.html#method-i-replace","(object, new_object)","<p>заменяет объект в массиве items на новый объект и уведомляет всех слушателей.\n"],["set_all","ListStateNotifier","ListStateNotifier.html#method-i-set_all","(objects)","<p>устанавливает новое значение для items и уведомляет всех слушателей.\n"],["set_value","CustomerInputForm","CustomerInputForm.html#method-i-set_value","(field, value)",""],["set_value","ProductInputForm","ProductInputForm.html#method-i-set_value","(field, value)",""],["set_view","CustomerInputFormControllerCreate","CustomerInputFormControllerCreate.html#method-i-set_view","(view)",""],["set_view","CustomerInputFormControllerEdit","CustomerInputFormControllerEdit.html#method-i-set_view","(view)",""],["set_view","ProductInputFormControllerCreate","ProductInputFormControllerCreate.html#method-i-set_view","(view)",""],["set_view","ProductInputFormControllerEdit","ProductInputFormControllerEdit.html#method-i-set_view","(view)",""],["show_modal_add","CustomerListController","CustomerListController.html#method-i-show_modal_add","()",""],["show_modal_add","ProductListController","ProductListController.html#method-i-show_modal_add","()",""],["show_modal_edit","CustomerListController","CustomerListController.html#method-i-show_modal_edit","(current_page, per_page, selected_row)",""],["show_modal_edit","ProductListController","ProductListController.html#method-i-show_modal_edit","(current_page, per_page, selected_row)",""],["show_view","CustomerListController","CustomerListController.html#method-i-show_view","()",""],["show_view","ProductListController","ProductListController.html#method-i-show_view","()",""],["sort","CustomerListController","CustomerListController.html#method-i-sort","(page, per_page, sort_index)",""],["sort","ProductListController","ProductListController.html#method-i-sort","(page, per_page, sort_index)",""],["update","CustomerListView","CustomerListView.html#method-i-update","(customers)","<p>метод, в котором перезаписываетсся информация о сущности\n"],["update","ProductListView","ProductListView.html#method-i-update","(products)","<p>метод, в котором перезаписываетсся информация о сущности\n"],["update_count","CustomerListView","CustomerListView.html#method-i-update_count","(new_cnt)",""],["update_count","ProductListView","ProductListView.html#method-i-update_count","(new_cnt)",""],["Gemfile","","Gemfile.html","","<p>source ‘rubygems.org’\n<p>gem ‘glimmer-dsl-libui’, ‘~&gt; 0.7.4’ gem ‘mysql2’ …\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>GEM\n\n<pre>remote: https://rubygems.org/\nspecs:\n  array_include_methods (1.4.0)\n  ast (2.4.2)\n  chunky_png (1.4.0) ...</pre>\n"],["config.yaml","","lib/db_config/config_yaml.html","","<p>host: ‘localhost’ port: 3306 username: ‘root’ password: ‘12345’ database: ‘Sales’ …\n"],["db_create.sql","","lib/db_config/migrations/db_create_sql.html","","<p>DROP DATABASE Sales;\n<p>CREATE DATABASE Sales;\n"],["tables_create.sql","","lib/db_config/migrations/tables_create_sql.html","","<p>use Sales;\n<p>CREATE TABLE Product (\n\n<pre>product_id INT PRIMARY KEY AUTO_INCREMENT,\nproduct_name VARCHAR(255) ...</pre>\n"],["tables_insert.sql","","lib/db_config/mock_data/tables_insert_sql.html","","<p>use Sales;\n<p>INSERT INTO Product (product_name, wholesale_price, retail_price) VALUES\n\n<pre>(&#39;Product A&#39;, 10, 15), ...</pre>\n"]]}}